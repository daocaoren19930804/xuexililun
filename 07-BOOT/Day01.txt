一.转换
   1.2D转换
     1.旋转
		   语法：transform
			 取值：rotate(ndeg)
       注意：
			   1.旋转是连同坐标轴一起旋转，会影响到旋转后的位移效果。
				 2.转换原点会影响最后的转换效果。
	   2.倾斜（正方形->平行四边形）
	     1.什么是倾斜
			   改变页面中元素的形状
       2.语法
			   属性：transform
				 取值：
				    skewX(xdeg)
						   让元素向着x轴的方向产生倾斜效果，实际改变的是y轴的角度值。
						   n取值为正，y轴逆时针倾斜
               n取值为负，y轴顺时针倾斜
						skewY(ydeg)
               让元素向着y轴的方向产生倾斜效果，实际改变的是x轴的角度值。
							 n取值为正，x轴顺时针倾斜
							 n取值为负，x轴逆时针倾斜
            skew(x) 等同于skewX(x)

						skew(x,y)同时在x，y轴产生倾斜
         练习：
				    页面创建一个200*200px的元素，设置背景颜色，当鼠标悬停在元素上时，该元素向右移动200px,向下移动200px，旋转135deg,再向着x倾斜45deg,同时放大1.5倍。  3分钟

	 2.3D转换
	   1.透视距离
		   模拟人的眼睛到3D转换元素之间的距离
       属性：perspective
			 注意：该属性要加在3D元素的父元素上
     2.3D旋转
		   属性：transform
			 取值：
			    rotateX(xdeg) 以x轴为中心轴，旋转元素的角度。（爆米花机器，烤羊腿）

					rotateY(ydeg) 以y轴为中心轴，旋转元素的角度。（开关门）

					rotateZ(zdeg) 以z轴为中心轴，旋转元素的角度。（方向盘，摩天轮）

					rotate3D(x,y,z,ndeg) x,y,z取值为大于0的数字时，表示该轴参与旋转，取值为0则不参与旋转。
		   
二.过渡
   1.什么是过渡
	   使得CSS样式在一段时间内平缓变化的效果。
   2.过渡的语法
	   1.指定过渡属性
		   属性：transition-property
			 作用：指定哪个属性值在变化的时候需要用过渡的方式来体现。
			 取值：
			     1.all 能使用过渡的属性，一律用过渡体现
					 2.具体属性名
       ex:
			    transition-property:background;当背景的属性在发生变化的时候用过渡来体现。
			    transition-property:all; 所有属性发生变化时都用过渡体现
       允许设置过渡效果的属性：
			    1.颜色属性
					2.取值为数字的属性
					3.转换属性
					4.渐变属性
					5.visibility属性
		 2.指定过渡的时长	
		   作用：指定在多长时间内完成过渡操作
			 属性：transition-duration
			 取值：
			     以s或ms为单位的数值。1000ms=1s
     3.指定过渡的速度时间曲线函数
		   属性：transition-timing-function
			 取值：
			    ease 默认值，慢速开始，快速变快，慢速结束
					linear 匀速
					ease-in 慢速开始，加速结束
					ease-out 快速开始，慢速结束
					ease-in-out 慢速开始和结束，中间先加速后减速
     4.指定过渡的延迟
		   属性：transition-delay
			 取值：以s或ms为单位的数字
     5.过渡属性的编写位置
		   1.将过渡放在元素声明的样式中
			   既管去，又管回
       2.将过渡放在触发操作中
			   只管去，不管回
     6.过渡的简写方式
		   属性：
			   transition:property duration timing-function delay;
				 ex:
				 transition:background 2s linear; //正确
				 transition:all;//无过渡效果
        练习：
				  1.在页面创建1个100*100px的元素。
					2.鼠标悬停时，5秒钟之内，向右移动500px的同时旋转3圈。
					3.鼠标移除时，还能滚回来。















		中午测试一下webstorm能否正常使用

三.动画
  1.什么是动画
	  使元素从一种样式逐渐的变化为另一种样式，
		即将多个过渡效果放到一起。
    动画是通过"关键帧"，来控制动画的每一步。
		关键帧：
		   1.动画执行的时间点
			 2.在该时间点上的样式是什么
  2.动画的使用步骤
	  1.声明动画
		  为动画起名，定义关键帧
			语法：
			@keyframes 动画名称{
			  /*定义 关键帧*/
        0%{
				   动画开始时元素的样式
				}
				25%{
				  动画执行到1/4时的样式
				}
				50%{
				  动画执行到一半时的样式
				}
				100%{
				  动画执行结束时的样式
				}
			}
		2.调用动画
		  将声明好的动画，通过使用动画名称的方式来添加给元素。
			1.调用动画属性
			  属性：animation-name
				作用：指定调用动画的名称
      2.animation-duration
			  作用：指定动画执行一个周期的时长
				取值：以s或ms为单位的数字
      3.animation-timing-function
			  作用：指定动画速度时间曲线函数
				取值：ease/linear/ease-in/ease-out/ease-in-out
      4.animation-delay
			  作用：指定动画的延迟时间
				取值：以s或ms为单位的数字
      5.animation-iteration-count
			  作用：指定动画的播放次数
				取值：
				   1.具体的数字
					 2.infinite 无限次播放
      6.animation-direction
			  作用：指定动画的播放方向
				取值：
				   1.normal 默认值，正常播放0%~100%
					 2.reverse 逆向播放100%~0%
					 3.alternate 轮流播放
					   奇数次播放时，正向播放
						 偶数次播放时，逆向播放
      7.动画属性的简写方式
			  animation:name duration timing-function delay iteration-count direction;
      8.animation-fill-mode
			  作用：规定动画在播放前或播放后的状态
				取值：
				   1.none 默认值
					 2.forwards 动画播放完成后，将保持在最后一个帧的状态上。
					 3.backwards 动画播放前，延迟时间内，动画保持在第一帧的状态上。
					 4.both 是forwards和backwards的结合体
      9.animation-play-state
			  作用：指定动画是处于播放还是暂停的状态上
				取值：
				   1.paused：暂停
					 2.running：播放
      补充：
			  如果要兼容低版本浏览器的动画效果，可以使用加前缀
				ex:
				@-webkit-keyframes 动画名{...}
				@-moz-keyframes 动画名{...}
				@-ms-keyframes 动画名{...}
				@-o-keyframes 动画名{...}
				
四.CSS优化
  1.CSS优化的原则
	  尽量减少HTTP请求个数
		页面顶部引入css文件
		将CSS和js放到外部独立的文件中
  2.CSS代码优化
	  合并样式
		缩小样式文件
		代码压缩
		选择更优的样式属性值
		避免空src和href
  
========================================
Bootstrap
五.Bootstrap
  官网：https://getbootstrap.com/
	中文官网：https://bootcss.com/
 1.响应式布局
	　1.什么是响应式网页
	    Responsive web page:响应式网页，可以根据浏览 器设备的不同（pc/pad/phone）而自动的更改布局，图片文字效果，不会影响用户的浏览体验。
	  2.响应式网页必须做到
		  1.布局：不能固定宽度，必须是流式布局
			2.文字和图片大小随着容大小而改变
			3.使用媒体查询
			  响应式网页存在的问题：代码的复杂大大提升，适用于内容不太多的页面。

    3.如何测试响应式网页
		  1.方式1：使用真实设备测试
			  好处：测试效果真实可靠
				不足：测试任务量较大
      2.使用第三方模拟测试软件
			  好处：无需添置太多真实设备，方便测试
				不足：测试效果有限，有待进一步测试
      3.使用Chrome等浏览器自带模拟设备
			  好处：简单方便
				不足：测试效果有限，需要进一步测试
		4.如何编写响应式网页
		  1.声明元标签（viewport-手机适配）
			  <meta name="viewport" content="width=device-width, initial-scale=1.0">
				viewport元标签:
				  早期3G手机为了浏览大尺寸的网页，只能强行把网页缩小，导致文字，图片等变小。
					ios提出了"视口"，视口用于盛放网页内容，超过部分，滑动显示。android也借用了此概念。
          width=device-width 表示视口的宽度就是设备的宽度
					initial-scale=1.0 表示视口是否缩放，1.0不缩放
					maximum-scale=1.0 允许用户缩放的最大倍率
					minimum-scale=1.0 允许用户缩放的最小倍率
					user-scalable=0 是否允许用户手动缩放，取值yes/no/1/0
      2.所有的容器/文本/图片 使用相对尺寸不使用绝对尺寸
			  ex:
				  div{
					 /* width:1000px;*/绝对值
 
						width:100%;//相对值

					/*font-size:24px;*/ 绝对值
						font-size:1rem; 相对值
					}
      3.流式布局+弹性布局
			  实现方法：float+flex
      4.使用CSS3媒体查询技术---这是响应式布局必须条件
			  Media:媒体，指的是浏览网页的设备,如screen(pc/pad/phone),tv(电视)，print(打印机)
				Medai Query：媒体查询，可以自动根据当前设备类型的不同，或者特性（方向，尺寸，解析度）不同，有选择器的执行部分的css样式，忽略其他部分。
        媒体查询的两种使用方法：
				  (1)根据媒体查询结果使用不同的外部css文件
					<meta name="viewport" content="width=device-width,initial-scale=1.0" >
					<link media="screen and (min-width:992px)" rel="stylesheet" href="pc.css">
					<link media="screen and (max-width:991px) and (min-width:768px)" rel="stylesheet" href="pad.css">
					<link media="screen and (max-width:767px)" rel="stylesheet" href="phone.css">
			  
  课后作业：
	   1.完成媒体查询练习，效果图参考"课后练习"文件夹中的效果。
		 2.开发个人项目

			  
		  



	　　




